{"version":3,"file":"static/js/5313.2e31951d.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormContext.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;"],"names":["Col","React","props","ref","as","bsPrefix","className","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","classNames","useCol","colProps","Component","_jsx","length","displayName","propTypes","type","PropTypes","tooltip","Feedback","FormCheckLabel","htmlFor","controlId","useContext","FormContext","FormCheck","id","bsSwitchPrefix","inline","reverse","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","some","child","hasChildOfType","input","FormCheckInput","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","createWithBsPrefix","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","defaultProps","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select"],"sourceRoot":""}