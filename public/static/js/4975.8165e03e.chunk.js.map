{"version":3,"file":"static/js/4975.8165e03e.chunk.js","mappings":"kOA0CA,UAlC2B,WACvB,IAAQA,GAAUC,EAAAA,EAAAA,MAAVD,MACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACNC,SAASC,MAAQ,8BACjB,IAAMC,EAAkB,IAAIC,gBAE5B,OADAC,EAAsBF,EAAgBG,QAC/B,kBAAMH,EAAgBI,OAAQ,CACzC,GAAG,IAEH,IAAMF,EAAqB,yCAAG,WAAOC,GAAM,8FAClBE,EAAAA,EAAAA,IAAS,wBAAD,OAAyBd,GAAS,CAAEY,OAAAA,IAAU,KAAD,EAAhE,GAAgE,WAApEG,EAAI,EAAJA,MACGC,OAAO,CAAD,gBACa,OAAxBC,EAAAA,GAAAA,QAAcF,EAAKG,KAAK,SAClBhB,GAASiB,EAAAA,EAAAA,IAAW,CACtBC,KAAML,EAAKK,KACXpB,MAAOe,EAAKf,SACZ,KAAD,EACHI,EAAS,aAAa,wBAEtBa,EAAAA,GAAAA,MAAYF,EAAKG,KACjBd,EAAS,UAAS,4CAEzB,gBAb0B,sCAc3B,OACI,gBAAKiB,UAAU,kEAAiE,UAC5E,SAAC,IAAS,CAACA,UAAU,cAAa,UAC9B,iBAAMA,UAAU,sBAAqB,6DAIrD,C,uCCvCMC,EAAW,WACb,OAAOC,OAAOC,aAAaC,QAAQ,SAAWD,aAAaC,QAAQ,SAAW,IAClF,EAEMC,EAAOC,EAAAA,GAAAA,OAAa,CAEtBC,QAAS,WACTC,QAAS,KACTC,QAAS,CACLC,cAAc,UAAD,OAAYT,QAIjCI,EAAKM,aAAaC,QAAQC,KAAI,SAASC,GAEnC,OADAA,EAAOL,QAAQC,cAAa,iBAAaT,KAClCa,CACX,IACAT,EAAKM,aAAaI,SAASF,KAAI,SAASE,GACpC,OAAOA,CACX,IAAG,SAASC,GAKR,OAJ4B,MAAxBA,EAAID,SAASpB,QAA0C,MAAxBqB,EAAID,SAASpB,QAA0C,MAAxBqB,EAAID,SAASpB,SAC3EO,OAAOC,aAAac,QACpBf,OAAOgB,SAASC,KAAO,UAEpBC,QAAQC,OAAOL,EAC1B,IAEA,K","sources":["pages/users/VerifyChangedEmail.jsx","services/Http.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateUser } from \"../../store/reducers/userReducer\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport Http from \"../../services/Http\";\r\n\r\nconst VerifyChangedEmail = () => {\r\n    const { token } = useParams();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        document.title = \"AnswerSheet - HSC made easy\"\r\n        const abortController = new AbortController();\r\n        setVerifyChangedEmail(abortController.signal);\r\n        return () => abortController.abort();\r\n    }, []);\r\n\r\n    const setVerifyChangedEmail = async (signal) => {\r\n        let { data } = await Http.get(`verify-changed-email/${token}`, { signal });\r\n        if (data.status) {\r\n            toast.success(data.msg);\r\n            await dispatch(updateUser({\r\n                user: data.user,\r\n                token: data.token\r\n            }));\r\n            navigate(\"/subjects\");\r\n        } else {\r\n            toast.error(data.msg);\r\n            navigate(\"/login\")\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"page-container d-flex align-items-center justify-content-center\">\r\n            <Container className=\"text-center\">\r\n                <span className=\"alert alert-success\">Please wait while verifing your new email...</span>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyChangedEmail;","import axios from \"axios\";\r\nconst getToken = () => {\r\n    return window.localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\r\n}\r\n\r\nconst http = axios.create({\r\n    // baseURL: \"http://localhost:5000/api/v1/\",\r\n    baseURL: \"/api/v1/\",\r\n    timeout: 15000,\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    }\r\n});\r\n\r\nhttp.interceptors.request.use(function(config) {\r\n    config.headers.Authorization = `Bearer ${getToken()}`;\r\n    return config;\r\n});\r\nhttp.interceptors.response.use(function(response) {\r\n    return response;\r\n}, function(err) {\r\n    if (err.response.status === 401 || err.response.status === 403 || err.response.status === 406) {\r\n        window.localStorage.clear();\r\n        window.location.href = \"/login\";\r\n    } \r\n    return Promise.reject(err);\r\n});\r\n\r\nexport default http;"],"names":["token","useParams","dispatch","useDispatch","navigate","useNavigate","useEffect","document","title","abortController","AbortController","setVerifyChangedEmail","signal","abort","Http","data","status","toast","msg","updateUser","user","className","getToken","window","localStorage","getItem","http","axios","baseURL","timeout","headers","Authorization","interceptors","request","use","config","response","err","clear","location","href","Promise","reject"],"sourceRoot":""}