{"version":3,"file":"static/js/4621.e5ec5711.chunk.js","mappings":"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","sources":["pages/users/Invoice.jsx","services/Http.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport Pdf from \"react-to-pdf\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Http from \"../../services/Http\";\r\nimport \"./Invoice.css\";\r\n\r\nconst Invoice = () => {\r\n    const ref = useRef(0);\r\n    const { id } = useParams();\r\n    const [invoice, setInvoice] = useState();\r\n    const [pdfDemension, setPdfDemension] = useState([]);\r\n    useEffect(() => {\r\n        document.title = 'AnswerSheet - Invoice';\r\n        const getInvoice = async () => {\r\n            let { data } = await Http.get(`invoices/${id}`);\r\n            if (data.success) {\r\n                setInvoice(data.invoice);\r\n            } else {\r\n                toast.error(data.msg);\r\n            }\r\n        }\r\n        getInvoice();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const resizeListener = () => {\r\n            let pdfWidth = ref.current.clientWidth;\r\n            let pdfHeight = ref.current.clientHeight;\r\n            let pdfWidthInch = pdfWidth * 0.01 + 1;\r\n            let pdfHeightInch = pdfHeight * 0.01 + .75;\r\n            setPdfDemension([pdfHeightInch, pdfWidthInch]);\r\n        }\r\n        setTimeout(() => resizeListener(), 500);\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, []);\r\n    const options = {\r\n        orientation: 'landscape',\r\n        unit: \"in\",\r\n        format: pdfDemension\r\n    }\r\n    return (\r\n        <div className=\"invoice-container\">\r\n            <Container className=\"py-3\" style={{ position: 'relative' }}>\r\n                <div style={{ position: 'absolute', right: 40, zIndex: 1, top: 40 }}>\r\n                    {invoice && <Pdf\r\n                        targetRef={ref}\r\n                        filename={\"INV-\" + invoice.invoice_id + \".pdf\"}\r\n                        options={options}\r\n                        x={0.25}\r\n                        y={0.25}\r\n                    >\r\n                        {({ toPdf }) => {\r\n                            return (\r\n                                <Button variant=\"default\" size=\"sm\" className=\"mx-1\" onClick={toPdf}>\r\n                                    <img src={require(\"../../assets/images/pdf_icon.png\")} height=\"18\" alt=\"PDF\" /> <span>PDF</span>\r\n                                </Button>\r\n                            )\r\n                        }}\r\n                    </Pdf>\r\n                    }\r\n                    {invoice && <CSVLink\r\n                        filename={\"INV-\" + invoice.invoice_id + \".csv\"}\r\n                        headers={[{\r\n                            label: \"Date\",\r\n                            key: \"paid_date\"\r\n                        }, {\r\n                            label: \"Invoice number\",\r\n                            key: \"invoice_id\"\r\n                        }, {\r\n                            label: \"Total\",\r\n                            key: \"total\"\r\n                        }, {\r\n                            label: \"Sub total\",\r\n                            key: \"sub_total\"\r\n                        }, {\r\n                            label: \"GST\",\r\n                            key: \"gst\"\r\n                        }, {\r\n                            label: \"Item name\",\r\n                            key: \"item_name\"\r\n                        }, {\r\n                            label: \"Item description\",\r\n                            key: \"item_description\"\r\n                        }, {\r\n                            label: \"To\",\r\n                            key: \"to\"\r\n                        }]}\r\n                        data={[{\r\n                            paid_date: moment(invoice.paid_date).format(\"DD MMM YYYY HH:mm:ss\"),\r\n                            invoice_id: \"INV-\" + invoice.invoice_id,\r\n                            total: Number(invoice.amount).toFixed(2),\r\n                            sub_total: Number(invoice.amount - invoice.gst).toFixed(2),\r\n                            gst: Number(invoice.gst).toFixed(2),\r\n                            item_name: invoice.item_name,\r\n                            item_description: invoice.item_description,\r\n                            to: invoice.company\r\n                        }]}\r\n                        className=\"btn btn-default btn-sm\">\r\n                        <img src={require(\"../../assets/images/csv_icon.png\")} height=\"18\" alt=\"CSV\" /> <span>CSV</span>\r\n                    </CSVLink>}\r\n                </div>\r\n                <div ref={ref}>\r\n                    <Card className=\"mb-3\">\r\n                        <Card.Body className=\"p-4\">\r\n                            <h1 className=\"page-title mb-4\">Tax Invoice</h1>\r\n                            {\r\n                                invoice &&\r\n                                <div className=\"d-flex justify-content-between invoice-content\">\r\n                                    <div className=\"invoice-to mb-2\">\r\n                                        <h5 className=\"text-dark\">To</h5>\r\n                                        <h5>{invoice.item_name}</h5>\r\n                                        <div className=\"description-items\">\r\n                                            <div className=\"description-item\">\r\n                                                <div className=\"description-item-name\">Invoice number</div>\r\n                                                <div className=\"description-item-value\">{\"INV-\" + invoice.invoice_id}</div>\r\n                                            </div>\r\n                                            <div className=\"description-item\">\r\n                                                <div className=\"description-item-name\">Paid date</div>\r\n                                                <div className=\"description-item-value\">{moment(invoice.paid_date).format(\"DD MMM YYYY\")}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"invoice-from mb-2\">\r\n                                        <h5 className=\"text-dark\">From</h5>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <h5>{invoice.company}</h5>\r\n                                                <p className=\"mb-0\">{invoice.address}</p>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <h5>All billing enquiries</h5>\r\n                                                <p className=\"mb-0\">{invoice.email}</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card>\r\n                        {\r\n                            invoice &&\r\n                            <Card.Body className=\"p-4 item-description-container\">\r\n                                <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                    <div className=\"item-description-title\"><img style={{ verticalAlign: \"middle\" }} src={require(\"../../assets/images/bar_sort_icon.png\")} height=\"14\" alt=\"Bar Sort\" className=\"me-2\" /> Item description</div>\r\n                                    <div className=\"item-description-title\"><img style={{ verticalAlign: \"middle\" }} src={require(\"../../assets/images/card_icon.png\")} height=\"25\" alt=\"Card\" className=\"me-2\" /> Amount</div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between item-description-content mb-4\">\r\n                                    <div>\r\n                                        <p className=\"mb-1\">{invoice.item_name}</p>\r\n                                        <p>{invoice.item_description}</p>\r\n                                    </div>\r\n                                    <div>{Number(invoice.amount - invoice.gst).toFixed(2)}</div>\r\n                                </div>\r\n                                <div className=\"invoice-billing-info\">\r\n                                    <div className=\"invoice-billing-left-info\">\r\n                                        <div>\r\n                                            <div>Sub total</div>\r\n                                            <div>{Number(invoice.amount - invoice.gst).toFixed(2)}</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div>Total GST 10%</div>\r\n                                            <div>{Number(invoice.gst).toFixed(2)}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"invoice-billing-right-info\">\r\n                                        <div>Amount due aus</div>\r\n                                        <div>{Number(invoice.amount).toFixed(2)}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        }\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Invoice;","import axios from \"axios\";\r\nconst getToken = () => {\r\n    return window.localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\r\n}\r\n\r\nconst http = axios.create({\r\n    // baseURL: \"http://localhost:5000/api/v1/\",\r\n    baseURL: \"/api/v1/\",\r\n    timeout: 15000,\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    }\r\n});\r\n\r\nhttp.interceptors.request.use(function(config) {\r\n    config.headers.Authorization = `Bearer ${getToken()}`;\r\n    return config;\r\n});\r\nhttp.interceptors.response.use(function(response) {\r\n    return response;\r\n}, function(err) {\r\n    if (err.response.status === 401 || err.response.status === 403 || err.response.status === 406) {\r\n        window.localStorage.clear();\r\n        window.location.href = \"/login\";\r\n    } \r\n    return Promise.reject(err);\r\n});\r\n\r\nexport default http;"],"names":["ref","useRef","id","useParams","useState","invoice","setInvoice","pdfDemension","setPdfDemension","useEffect","document","title","getInvoice","Http","data","success","toast","msg","resizeListener","pdfWidth","current","clientWidth","pdfHeight","clientHeight","setTimeout","window","addEventListener","removeEventListener","options","orientation","unit","format","className","Container","style","position","right","zIndex","top","targetRef","filename","invoice_id","x","y","toPdf","Button","variant","size","onClick","src","require","height","alt","CSVLink","headers","label","key","paid_date","moment","total","Number","amount","toFixed","sub_total","gst","item_name","item_description","to","company","Card","Row","Col","address","email","verticalAlign","getToken","localStorage","getItem","http","axios","baseURL","timeout","Authorization","interceptors","request","use","config","response","err","status","clear","location","href","Promise","reject"],"sourceRoot":""}