{"version":3,"file":"static/js/9861.19938821.chunk.js","mappings":"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","sources":["pages/users/PremiumSignUp.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Container, Form, Row, Col, Table, Button } from 'react-bootstrap'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createUser } from \"../../store/reducers/userReducer\";\r\nimport { useGoogleLogin } from \"@react-oauth/google\";\r\nimport { setLoading } from '../../store/reducers/userReducer'\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport Http from '../../services/Http'\r\nimport FormInput from '../../components/FormInput'\r\nimport { toast } from 'react-toastify'\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\r\nimport GoogleSvg from \"../../assets/images/google.svg\";\r\nimport SignUpSvg from '../../assets/images/Group-14629.svg'\r\nimport './PremiumSignUp.css'\r\n\r\nconst PremiumSignUp = () => {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const [membership, setMembership] = useState({})\r\n  let user = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    paymentType: 'stripe'\r\n  }\r\n  useEffect(() => {\r\n    document.title = 'AnswerSheet - HSC made easy'\r\n\r\n    let membershipToPurchase = JSON.parse(\r\n      window.localStorage.getItem('membership')\r\n    )\r\n    if (membershipToPurchase) {\r\n      setMembership(membershipToPurchase)\r\n    } else {\r\n      navigate('/signup')\r\n    }\r\n  }, [])\r\n\r\n  const validationSchema = yup.object({\r\n    firstName: yup\r\n      .string('Enter your first name.')\r\n      .required('First name is required.'),\r\n    lastName: yup\r\n      .string('Enter your last name.')\r\n      .required('Last name is required.'),\r\n    email: yup\r\n      .string('Enter your email.')\r\n      .email('Enter a vaild email.')\r\n      .required('Email is required.'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be minimum 8 characters in length.')\r\n      .required('Password is required.'),\r\n    confirmPassword: yup\r\n      .string()\r\n      .test(\r\n        'password-match',\r\n        'Password and Confirm password do not match.',\r\n        function (value) {\r\n          return this.parent.password === value\r\n        }\r\n      )\r\n  })\r\n  const googleRegister = useGoogleLogin({\r\n    onSuccess: async (tokenRes) => {\r\n      let { data } = await Http.post(\"register/google\", tokenRes);\r\n      if (data.status) {\r\n        // toast.success(data.msg);\r\n        // await dispatch(createUser({\r\n        //     user: data.user,\r\n        //     token: data.token\r\n        // }));\r\n        // navigate(\"/subjects\");\r\n        await upgradeMembership({ ...data.user, paymentType: user.paymentType });\r\n      } else {\r\n        // toast.error(data.msg);\r\n        dispatch(setLoading(false))\r\n        toast.error(data.msg)\r\n      }\r\n    },\r\n    onError: errRes => {\r\n      console.log(errRes)\r\n    }\r\n  });\r\n  const onRegister = async (user, { resetForm }) => {\r\n    let { data } = await Http.post('premium-register', user);\r\n    let premiumUser = {...data.user, gateway: 'stripe'};\r\n    dispatch(setLoading(true));\r\n    window.localStorage.setItem('premiumUser', JSON.stringify(premiumUser));\r\n    window.localStorage.setItem('premiumMembership', JSON.stringify(membership));\r\n    if (data.success) {\r\n      toast.success(data.msg);\r\n      // resetForm()\r\n      // await upgradeMembership({ ...data.user, paymentType: user.paymentType })\r\n    } else {\r\n      dispatch(setLoading(false))\r\n      toast.error(data.msg)\r\n    }\r\n  }\r\n  const upgradeMembership = async user => {\r\n    let { data } = await Http.post(`billing/${user.paymentType}`, {\r\n      user,\r\n      membership\r\n    });\r\n    if (data.success) {\r\n      dispatch(setLoading(false))\r\n      window.localStorage.removeItem('membership')\r\n      window.location.href = data.redirect_url\r\n      navigate('/current-membership');\r\n    } else {\r\n      dispatch(setLoading(false))\r\n      toast.error(data.msg)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='premium-signup-container'>\r\n      <Container>\r\n        <div className='page-content'>\r\n          <div className='page-left-content'>\r\n            <img src={SignUpSvg} alt='Sign Up' />\r\n          </div>\r\n          <div className='page-right-content'>\r\n            <Formik\r\n              validationSchema={validationSchema}\r\n              onSubmit={onRegister}\r\n              initialValues={user}\r\n              validateOnChange={false}\r\n              validateOnBlur={false}\r\n            >\r\n              {({ handleSubmit, handleChange, values, touched, errors }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <div style={{ width: '100%' }} className='mb-3'>\r\n                    <h1 className='page-title'>Join Answersheet Premium</h1>\r\n                  </div>\r\n                  {Object.keys(membership).length && (\r\n                    <Table bsPrefix='bg-white table table-bordered'>\r\n                      <thead\r\n                        style={{ backgroundColor: '#005492', color: '#fafafa' }}\r\n                      >\r\n                        <tr>\r\n                          <th>Premium membership</th>\r\n                          <th>Amount</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <div>\r\n                              {membership.name} - {membership.subjects.length} {membership.subjects.length > 1 ? 'subjects' : 'subject'}\r\n                            </div>\r\n                            <ul className=\"mb-0\">\r\n                              {membership.subjects.map((subject, idx) =>\r\n                                <li key={idx}>{subject.year_name} - {subject.name}</li>\r\n                              )}\r\n                            </ul>\r\n                          </td>\r\n                          <td>${membership.price}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className='fw-bolder'>Total payment</td>\r\n                          <td>${membership.price}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  )}\r\n                  <Form.Group className='mb-3'>\r\n                    <Form.Check\r\n                      inline\r\n                      type='radio'\r\n                      name='paymentType'\r\n                      value='stripe'\r\n                      className=\"mr-5 mb-3\"\r\n                      label={\r\n                        <>\r\n                          <LazyLoadImage\r\n                            src={require('../../assets/images/visa.png')}\r\n                            alt='visa'\r\n                            height='25'\r\n                            className='mx-2'\r\n                          />\r\n                          <LazyLoadImage\r\n                            src={require('../../assets/images/mastercard.png')}\r\n                            alt='mastercard'\r\n                            height='25'\r\n                            className='mx-2'\r\n                          />\r\n                          <LazyLoadImage\r\n                            src={require('../../assets/images/applepay.png')}\r\n                            alt='applepay'\r\n                            height='23'\r\n                            className='mx-2'\r\n                          />\r\n                          <LazyLoadImage\r\n                            src={require('../../assets/images/googlepay.png')}\r\n                            alt='googlepay'\r\n                            height='25'\r\n                            className='mx-2'\r\n                          />\r\n                        </>\r\n                      }\r\n                      id='stripe'\r\n                      checked={values.paymentType === 'stripe'}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      inline\r\n                      type='radio'\r\n                      name='paymentType'\r\n                      value='paypal'\r\n                      label={\r\n                        <LazyLoadImage\r\n                          src={require('../../assets/images/paypal.png')}\r\n                          height='24'\r\n                          alt='paypal'\r\n                        />\r\n                      }\r\n                      id='paypal'\r\n                      checked={values.paymentType === 'paypal'}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <div style={{ width: '100%' }} className='mb-3'>\r\n                    <h1 className='page-title'>Create an account</h1>\r\n                  </div>\r\n                  <FormInput\r\n                    required\r\n                    name='email'\r\n                    className='mb-4'\r\n                    icon='fa fa-envelope'\r\n                    type='email'\r\n                    placeholder='Email'\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    errors={errors}\r\n                  />\r\n                  <Row>\r\n                    <Col md='6' sm='12'>\r\n                      <FormInput\r\n                        required\r\n                        name='firstName'\r\n                        className='mb-4'\r\n                        icon='fa fa-user'\r\n                        type='text'\r\n                        placeholder='First name'\r\n                        onChange={handleChange}\r\n                        value={values.firstName}\r\n                        errors={errors}\r\n                      />\r\n                    </Col>\r\n                    <Col md='6' sm='12'>\r\n                      <FormInput\r\n                        required\r\n                        name='lastName'\r\n                        className='mb-4'\r\n                        icon='fa fa-user'\r\n                        type='text'\r\n                        placeholder='Last name'\r\n                        onChange={handleChange}\r\n                        value={values.lastName}\r\n                        errors={errors}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md='6' sm='12'>\r\n                      <FormInput\r\n                        required\r\n                        name='password'\r\n                        className='mb-4'\r\n                        icon='fa fa-lock'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        onChange={handleChange}\r\n                        value={values.password}\r\n                        errors={errors}\r\n                      />\r\n                    </Col>\r\n                    <Col md='6' sm='12'>\r\n                      <FormInput\r\n                        required\r\n                        name='confirmPassword'\r\n                        className='mb-4'\r\n                        icon='fa fa-check'\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        onChange={handleChange}\r\n                        value={values.confirmPassword}\r\n                        errors={errors}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <div className='d-grid'>\r\n                    <Button\r\n                      variant='primary'\r\n                      type='submit'\r\n                      className='float-end'\r\n                    >\r\n                      <i className='fa fa-sign-in'></i> Sign up and join\r\n                    </Button>\r\n                  </div>\r\n                  <div style={{ display: \"flex\", alignItems: 'center', justifyContent: 'center' }}>\r\n                    <div style={{ flex: 1 }}><hr /></div>\r\n                    <div className=\"py-2 px-3 fw-bold text-dark\">OR</div>\r\n                    <div style={{ flex: 1 }}><hr /></div>\r\n                  </div>\r\n                  <div className=\"d-grid\">\r\n                    <Button variant=\"primary\" className=\"google-signup-btn\" type=\"button\" onClick={googleRegister}>\r\n                      <LazyLoadImage src={GoogleSvg} alt=\"google\" /> Sign up with Google and join\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PremiumSignUp\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["navigate","useNavigate","dispatch","useDispatch","useState","membership","setMembership","user","firstName","lastName","email","password","confirmPassword","paymentType","useEffect","document","title","membershipToPurchase","JSON","parse","window","localStorage","getItem","validationSchema","yup","required","min","test","value","this","parent","googleRegister","useGoogleLogin","onSuccess","tokenRes","Http","data","status","upgradeMembership","setLoading","toast","msg","onError","errRes","console","log","onRegister","resetForm","premiumUser","gateway","setItem","stringify","success","removeItem","location","href","redirect_url","className","Container","src","SignUpSvg","alt","onSubmit","initialValues","validateOnChange","validateOnBlur","handleSubmit","handleChange","values","errors","touched","Form","noValidate","style","width","Object","keys","length","Table","bsPrefix","backgroundColor","color","name","subjects","map","subject","idx","year_name","price","inline","type","label","LazyLoadImage","require","height","id","checked","onChange","FormInput","icon","placeholder","Row","Col","md","sm","Button","variant","display","alignItems","justifyContent","flex","onClick","GoogleSvg","React","ref","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}