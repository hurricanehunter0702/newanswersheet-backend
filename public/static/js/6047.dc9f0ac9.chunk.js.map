{"version":3,"file":"static/js/6047.dc9f0ac9.chunk.js","mappings":"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","sources":["components/FormInput.jsx","pages/users/ResetPassword.jsx","services/Http.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import { Form } from \"react-bootstrap\";\r\nimport \"./FormInput.css\";\r\n\r\nconst FormInput = ({\r\n    className,\r\n    name,\r\n    icon,\r\n    type,\r\n    placeholder,\r\n    onChange,\r\n    onBlur,\r\n    readOnly,\r\n    required,\r\n    value,\r\n    disabled,\r\n    touched = \"\",\r\n    errors = \"\"\r\n}) => {\r\n    return (\r\n        <Form.Group className={['position-relative ' + className]}>\r\n            <i className={icon}></i>\r\n            <Form.Control \r\n                type={type}\r\n                name={name} \r\n                placeholder={placeholder} \r\n                readOnly={readOnly}\r\n                required={required}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                disabled={disabled}\r\n                value={value}\r\n                isInvalid={!!errors[name]}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {errors[name]}\r\n            </Form.Control.Feedback>\r\n\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default FormInput;","import { useEffect } from \"react\";\r\nimport { Formik } from 'formik'\r\nimport { Card, Form, Button } from 'react-bootstrap'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport * as yup from 'yup'\r\nimport FormInput from '../../components/FormInput'\r\nimport Http from '../../services/Http'\r\nimport './ResetPassword.css'\r\n\r\nconst ResetPassword = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const passwords = {\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  }\r\n\r\n  const validationSchema = yup.object({\r\n    newPassword: yup\r\n      .string('Enter your password.')\r\n      .min(8, 'Password should be minimum 8 characters in length.')\r\n      .required('Password is required.'),\r\n    confirmPassword: yup\r\n      .string('Enter your confirm password.')\r\n      .test('password-match', 'Password and Confirm password do not match.', function (value) {\r\n        return this.parent.newPassword === value\r\n      })\r\n  })\r\n\r\n  useEffect(() => {\r\n    document.title = \"AnswerSheet - HSC made easy\";\r\n  }, []);\r\n\r\n  const onRestPassword = async (passwords, { resetForm }) => {\r\n    let { newPassword: password } = passwords;\r\n    let { token } = params;\r\n    let { data } = await Http.post('reset-password', {\r\n        password, token\r\n    });\r\n    if (data.status) {\r\n        toast.success(data.msg);\r\n        navigate(\"/login\");\r\n    } else {\r\n        toast.error(data.msg);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='reset-password-container'>\r\n      <Card style={{ flexBasis: 450 }}>\r\n        <Card.Body className='px-5 py-5'>\r\n          <Card.Title as='h3' className='mb-4 text-center'>\r\n            Reset password\r\n          </Card.Title>\r\n          <Formik\r\n            validationSchema={validationSchema}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            onSubmit={onRestPassword}\r\n            initialValues={passwords}\r\n          >\r\n            {({ handleSubmit, handleChange, values, touched, errors }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <FormInput\r\n                  required\r\n                  name='newPassword'\r\n                  className='mb-4'\r\n                  icon='fa fa-key'\r\n                  type='password'\r\n                  placeholder='New password'\r\n                  onChange={handleChange}\r\n                  value={values.newPassword}\r\n                  touched={touched}\r\n                  errors={errors}\r\n                />\r\n                <FormInput\r\n                  required\r\n                  name='confirmPassword'\r\n                  className='mb-4'\r\n                  icon='fa fa-lock'\r\n                  type='password'\r\n                  placeholder='Confirm password'\r\n                  onChange={handleChange}\r\n                  value={values.confirmPassword}\r\n                  touched={touched}\r\n                  errors={errors}\r\n                />\r\n                <div className='d-grid'>\r\n                  <Button type='submit' variant='primary'>\r\n                    Reset\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n","import axios from \"axios\";\r\nconst getToken = () => {\r\n    return window.localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\r\n}\r\n\r\nconst http = axios.create({\r\n    // baseURL: \"http://localhost:5000/api/v1/\",\r\n    baseURL: \"/api/v1/\",\r\n    timeout: 15000,\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    }\r\n});\r\n\r\nhttp.interceptors.request.use(function(config) {\r\n    config.headers.Authorization = `Bearer ${getToken()}`;\r\n    return config;\r\n});\r\nhttp.interceptors.response.use(function(response) {\r\n    return response;\r\n}, function(err) {\r\n    if (err.response.status === 401 || err.response.status === 403 || err.response.status === 406) {\r\n        window.localStorage.clear();\r\n        window.location.href = \"/login\";\r\n    } \r\n    return Promise.reject(err);\r\n});\r\n\r\nexport default http;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["className","name","icon","type","placeholder","onChange","onBlur","readOnly","required","value","disabled","touched","errors","Form","isInvalid","params","useParams","navigate","useNavigate","validationSchema","yup","newPassword","min","confirmPassword","test","this","parent","useEffect","document","title","onRestPassword","passwords","resetForm","password","token","Http","data","status","toast","msg","Card","style","flexBasis","as","validateOnChange","validateOnBlur","onSubmit","initialValues","handleSubmit","handleChange","values","noValidate","FormInput","Button","variant","getToken","window","localStorage","getItem","http","axios","baseURL","timeout","headers","Authorization","interceptors","request","use","config","response","err","clear","location","href","Promise","reject","CardImg","React","ref","bsPrefix","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}