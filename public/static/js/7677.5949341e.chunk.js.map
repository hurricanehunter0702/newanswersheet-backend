{"version":3,"file":"static/js/7677.5949341e.chunk.js","mappings":"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","sources":["components/Pagination.jsx","components/DataTable.jsx","pages/admin/Sales.jsx","services/Http.js"],"sourcesContent":["import { useMemo } from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport \"./Pagination.css\";\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1\r\n  return Array.from({ length }, (_, idx) => idx + start)\r\n}\r\nconst usePagination = ({\r\n  totalCount,\r\n  pageSize,\r\n  siblingCount = 1,\r\n  currentPage\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize)\r\n    const totalPageNumbers = siblingCount + 5\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount)\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    )\r\n\r\n    const shouldShowLeftDots = leftSiblingIndex > 2\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2\r\n\r\n    const firstPageIndex = 1\r\n    const lastPageIndex = totalPageCount\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount\r\n      let leftRange = range(1, leftItemCount)\r\n\r\n      return [...leftRange, 'DOTS', totalPageCount]\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      )\r\n      return [firstPageIndex, 'DOTS', ...rightRange]\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex)\r\n      return [firstPageIndex, 'DOTS', ...middleRange, 'DOTS', lastPageIndex]\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage])\r\n\r\n  return paginationRange\r\n}\r\n\r\nconst CPagination = props => {\r\n  const {\r\n    search,\r\n    pagination,\r\n    onChange,\r\n    siblingCount = 1,\r\n    className\r\n  } = props\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage: pagination.page,\r\n    totalCount: pagination.totalCount,\r\n    pageSize: pagination.pageSize,\r\n    siblingCount\r\n  })\r\n  if (pagination.page === 0 || paginationRange.length < 1) {\r\n    return null\r\n  }\r\n  let lastPage = paginationRange[paginationRange.length - 1]\r\n\r\n  const onFirst = () => {\r\n    onChange({search, pagination: {...pagination, page: 1}});\r\n  }\r\n  const onNext = () => {\r\n    if (pagination.page < lastPage) {\r\n      onChange({search, pagination: {...pagination, page: pagination.page + 1}});\r\n    }\r\n  }\r\n\r\n  const onPrevious = () => {\r\n    if (pagination.page > 1) {\r\n      onChange({search, pagination: {...pagination, page: pagination.page - 1}});\r\n    }\r\n  }\r\n  const onLast = () => {\r\n    onChange({search, pagination: {...pagination, page: lastPage}});\r\n  }\r\n\r\n  return (\r\n    <Pagination className={className}>\r\n      <Pagination.First onClick={onFirst} />\r\n      <Pagination.Prev onClick={onPrevious} />\r\n      {paginationRange.map((pageNumber, idx) => {\r\n        if (pageNumber === 'DOTS') {\r\n          return <Pagination.Ellipsis key={idx} />\r\n        }\r\n        if (pagination.page === pageNumber) {\r\n          return (\r\n            <Pagination.Item\r\n              key={idx}\r\n              active\r\n              onClick={() => onChange({search, pagination: {...pagination, page: pageNumber}})}\r\n            >\r\n              {pageNumber}\r\n            </Pagination.Item>\r\n          )\r\n        } else {\r\n          return (\r\n            <Pagination.Item key={idx} onClick={() => onChange({search, pagination: {...pagination, page: pageNumber}})}>\r\n              {pageNumber}\r\n            </Pagination.Item>\r\n          )\r\n        }\r\n      })}\r\n      <Pagination.Next onClick={onNext} />\r\n      <Pagination.Last onClick={onLast} />\r\n    </Pagination>\r\n  )\r\n}\r\nexport default CPagination\r\n","import { Form, Table, Button } from \"react-bootstrap\";\r\nimport Pagination from \"./Pagination\";\r\nimport \"./DataTable.css\";\r\n\r\nconst DataTable = ({\r\n    pageItems = [5, 10, 20, 50, 100],\r\n    columns,\r\n    data = [],\r\n    options = {\r\n        responsive: true,\r\n        bordered: true,\r\n        center: true\r\n    },\r\n    pagination = {\r\n        page: 1,\r\n        totalCount: 10,\r\n        pageSize: 10\r\n    },\r\n    sort,\r\n    search,\r\n    onChange,\r\n    emptyText = \"Empty data\",\r\n    onRow = () => {}\r\n}) => {\r\n    const onSearch = (e) => {\r\n        if (e.keyCode === 13) onChange({search: e.target.value, pagination: {...pagination, page: 1}});\r\n    }\r\n    const requestSort = (key, order) => {\r\n        var dir = \"asc\";\r\n        if (order === undefined) {\r\n            dir = \"asc\"; \r\n        } else if (order.dir === \"asc\") {\r\n            dir = \"desc\";\r\n        } else if (order.dir === \"desc\") {\r\n            dir = \"asc\";\r\n        }\r\n        onChange({search, pagination, sort: {key, dir}});\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between mb-3\">\r\n                <Form.Select size=\"sm\" style={{maxWidth: 100}} defaultValue={pagination.pageSize} onChange={(e) => onChange({search, pagination: {...pagination, pageSize: Number(e.target.value), page: 1}})}>\r\n                    {pageItems.map((item, idx) => <option value={item} key={idx}>{item}</option>)}\r\n                </Form.Select>\r\n                <Form.Control size=\"sm\" \r\n                    type=\"text\" \r\n                    placeholder=\"Search...\" \r\n                    style={{maxWidth: 200}} \r\n                    onKeyUp={(e) => onSearch(e)}\r\n                />\r\n            </div>\r\n            <Table className={'datatable ' + (options.center ? 'text-center' : '')} responsive={options.responsive} bordered={options.bordered} hover>\r\n                <thead>\r\n                    <tr>\r\n                        {columns.map((column, idx) => <th key={idx} style={{width: column.width ? column.width : 'auto'}}>\r\n                            {column.name} \r\n                            {\r\n                                (column.sortable !== false) && \r\n                                <Button className=\"sort-btn\" size=\"sm\" variant=\"link\" onClick={() => requestSort(column.key, sort)}>\r\n                                    {(typeof sort === \"undefined\" || sort.key !== column.key) && <i className=\"fa fa-arrows-v\"></i>}\r\n                                    { typeof sort !== \"undefined\" && sort.key === column.key && sort.dir === \"asc\" && <i className=\"fa fa-long-arrow-up\"></i>}\r\n                                    {typeof sort !== \"undefined\" && sort.key === column.key && sort.dir === \"desc\" && <i className=\"fa fa-long-arrow-down\"></i>}\r\n                                </Button>\r\n                            }\r\n                        </th>)}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.length ? data.map((rowData, idx) => {\r\n                            return (\r\n                                <tr key={idx} onClick={() => onRow(rowData._id)}>\r\n                                    {columns.map((column, idx1) => {\r\n                                        if (column.render) {\r\n                                            return <td key={idx1}>{(column.render(rowData, idx))}</td>\r\n                                        } else {\r\n                                            return (\r\n                                                <td key={idx1}>{rowData[column.key]}</td>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }): <tr><td colSpan={columns.length} className=\"text-center text-danger\">{emptyText}</td></tr>\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <div className=\"d-flex align-items-center justify-content-end\">\r\n                <Pagination \r\n                    search={search}\r\n                    pagination={pagination}\r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataTable;","import { useState, useEffect } from 'react'\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js'\r\nimport { Line } from 'react-chartjs-2'\r\nimport Http from '../../services/Http'\r\nimport DataTable from '../../components/DataTable'\r\nimport moment from 'moment'\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n)\r\n\r\nconst Sales = () => {\r\n  const [isGetData, setIsGetData] = useState(0)\r\n  const [data, setData] = useState([])\r\n  const [search, setSearch] = useState('')\r\n  const [sort, setSort] = useState()\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    totalCount: 0,\r\n    pageSize: 10\r\n  })\r\n  const weeklyOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Last 7 days sales'\r\n      }\r\n    }\r\n  }\r\n  const [weeklyLabels, setWeeklyLabels] = useState([]);\r\n  const [weeklyStatistics, setWeeklyStatistics] = useState([]);\r\n  const weeklyData = {\r\n    labels: weeklyLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Income',\r\n        data: weeklyStatistics,\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\r\n      }\r\n    ]\r\n  }\r\n  const monthlyOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Monthly sales'\r\n      }\r\n    }\r\n  }\r\n  const monthlyLabels = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n  ]\r\n  const [monthlyStatistics, setMonthlyStatistics] = useState([]);\r\n  const monthlyData = {\r\n    labels: monthlyLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Income',\r\n        data: monthlyStatistics,\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\r\n      }\r\n    ]\r\n  }\r\n\r\n  const annuallyOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Annually sales'\r\n      }\r\n    }\r\n  }\r\n  const [annuallyLabels, setAnnuallyLabels] = useState([]);\r\n  const [annuallyStatistics, setAnnaullyStatistics] = useState([]);\r\n  const annuallyData = {\r\n    labels: annuallyLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Income',\r\n        data: annuallyStatistics,\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\r\n      }\r\n    ]\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      key: '_id',\r\n      name: 'No',\r\n      width: 65,\r\n      render: (rowData, idx) => idx + 1\r\n    },\r\n    {\r\n      key: 'transaction_id',\r\n      name: 'Transaction number'\r\n    },\r\n    {\r\n      key: 'user',\r\n      name: 'User',\r\n      render: (rowData, idx) =>\r\n        rowData.user.firstName + ' ' + rowData.user.lastName\r\n    },\r\n    {\r\n      key: 'amount',\r\n      name: 'Amount',\r\n      width: 120\r\n    },\r\n    {\r\n      key: 'currency',\r\n      name: 'Currency',\r\n      width: 120,\r\n    },\r\n    {\r\n      key: 'type',\r\n      name: 'Payment type',\r\n      width: 160\r\n    },\r\n    {\r\n      key: 'createdAt',\r\n      name: 'Paid date',\r\n      render: (rowData) => {\r\n        return moment(rowData.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")\r\n      },\r\n      width: 180\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    const getTransactions = async () => {\r\n      let { data } = await Http.get('admin/transactions', {\r\n        params: {\r\n          search: search,\r\n          length: pagination.pageSize,\r\n          page: pagination.page,\r\n          sortKey: sort ? sort.key : '',\r\n          sortDir: sort ? sort.dir : ''\r\n        }\r\n      })\r\n      setData(data.data)\r\n      setPagination({ ...pagination, totalCount: data.totalCount })\r\n    }\r\n    getTransactions()\r\n  }, [isGetData]);\r\n\r\n  useEffect(() => {\r\n    const getStatistics = async () => {\r\n      let { data } = await Http.get(\"admin/transactions/get-statistics\");\r\n      setWeeklyLabels(data.weeklyStatistics.map(data => moment(data.date).format(\"YYYY/MM/DD\")));\r\n      setWeeklyStatistics(data.weeklyStatistics.map(data => data.amount));\r\n      setMonthlyStatistics(data.monthlyStatistics.map(data => data.amount));\r\n      setAnnuallyLabels(data.annuallyStatistics.map(data => data.year));\r\n      setAnnaullyStatistics(data.annuallyStatistics.map(data => data.amount));\r\n    }\r\n    getStatistics();\r\n  }, []);\r\n  const onChange = ({ search, pagination, sort }) => {\r\n    setSort(sort)\r\n    setSearch(search)\r\n    setPagination(pagination)\r\n    setIsGetData(!isGetData)\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        style={{ background: '#3c4b64' }}\r\n        bsPrefix='card-header py-3'\r\n      >\r\n        <Card.Title as='h1' bsPrefix='mb-0 card-title text-light' style={{fontSize: 24}}>\r\n          Sales management\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col md={4}>\r\n            <div style={{margin: '.5rem'}}>\r\n              <Line options={weeklyOptions} data={weeklyData} height={300}/>\r\n            </div>\r\n          </Col>\r\n          <Col md={4}>\r\n            <div style={{margin: '.5rem'}}>\r\n              <Line options={monthlyOptions} data={monthlyData} height={300}/>\r\n            </div>\r\n          </Col>\r\n          <Col md={4}>\r\n            <div style={{margin: '.5rem'}}>\r\n              <Line options={annuallyOptions} data={annuallyData} height={300}/>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <DataTable\r\n          columns={columns}\r\n          data={data}\r\n          sort={sort}\r\n          search={search}\r\n          pagination={pagination}\r\n          onChange={onChange}\r\n        />\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Sales\r\n","import axios from \"axios\";\r\nconst getToken = () => {\r\n    return window.localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\r\n}\r\n\r\nconst http = axios.create({\r\n    // baseURL: \"http://localhost:5000/api/v1/\",\r\n    baseURL: \"/api/v1/\",\r\n    timeout: 15000,\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    }\r\n});\r\n\r\nhttp.interceptors.request.use(function(config) {\r\n    config.headers.Authorization = `Bearer ${getToken()}`;\r\n    return config;\r\n});\r\nhttp.interceptors.response.use(function(response) {\r\n    return response;\r\n}, function(err) {\r\n    if (err.response.status === 401 || err.response.status === 403 || err.response.status === 406) {\r\n        window.localStorage.clear();\r\n        window.location.href = \"/login\";\r\n    } \r\n    return Promise.reject(err);\r\n});\r\n\r\nexport default http;"],"names":["range","start","end","length","Array","from","_","idx","props","search","pagination","onChange","siblingCount","className","paginationRange","totalCount","pageSize","currentPage","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","page","lastPage","Pagination","onClick","map","pageNumber","active","pageItems","columns","data","options","responsive","bordered","center","sort","emptyText","onRow","Form","size","style","maxWidth","defaultValue","e","Number","target","value","item","type","placeholder","onKeyUp","keyCode","onSearch","Table","hover","column","width","name","sortable","Button","variant","key","order","dir","undefined","requestSort","rowData","_id","idx1","render","colSpan","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","useState","isGetData","setIsGetData","setData","setSearch","setSort","setPagination","weeklyLabels","setWeeklyLabels","weeklyStatistics","setWeeklyStatistics","weeklyData","labels","datasets","label","borderColor","backgroundColor","monthlyStatistics","setMonthlyStatistics","monthlyData","annuallyLabels","setAnnuallyLabels","annuallyStatistics","setAnnaullyStatistics","annuallyData","user","firstName","lastName","moment","createdAt","format","useEffect","getTransactions","Http","params","sortKey","sortDir","getStatistics","date","amount","year","background","bsPrefix","as","fontSize","md","margin","maintainAspectRatio","plugins","legend","display","title","text","height","getToken","window","localStorage","getItem","http","axios","baseURL","timeout","headers","Authorization","interceptors","request","use","config","response","err","status","clear","location","href","Promise","reject"],"sourceRoot":""}