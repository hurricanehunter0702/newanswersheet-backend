{"version":3,"file":"static/js/5228.ed491206.chunk.js","mappings":"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","sources":["pages/users/SignUp.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createUser } from \"../../store/reducers/userReducer\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport { useGoogleLogin } from \"@react-oauth/google\";\r\nimport Http from \"../../services/Http\";\r\nimport FormInput from \"../../components/FormInput\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport SignUpSvg from \"../../assets/images/Group-14629.svg\";\r\nimport GoogleSvg from \"../../assets/images/google.svg\";\r\nimport \"./SignUp.css\";\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    let user = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    };\r\n\r\n    const validationSchema = yup.object({\r\n        firstName: yup.string('Enter your first name.')\r\n            .required('First name is required.'),\r\n        lastName: yup.string('Enter your last name.')\r\n            .required('Last name is required.'),\r\n        email: yup.string('Enter your email')\r\n            .email('Enter a vaild email.')\r\n            .required('Email is required.'),\r\n        password: yup.string('Enter your password.')\r\n            .min(8, 'Password should be minimum 8 characters in length.')\r\n            .required('Password is required.'),\r\n        confirmPassword: yup.string()\r\n            .test('password-match', 'Password and Confirm password do not match.', function(value) { \r\n                return this.parent.password === value\r\n            })\r\n    });\r\n    \r\n    useEffect(() => {\r\n        document.title = \"AnswerSheet - Sign Up\";\r\n    }, []);\r\n    const onRegister = async (user, { resetForm }) => {\r\n        let { data } = await Http.post(\"register\", user);\r\n        if (data.success) {\r\n            resetForm();\r\n            navigate(\"/confirm-email\");\r\n        } else {\r\n            toast.error(data.msg);\r\n        }\r\n    }\r\n    const googleRegister = useGoogleLogin({\r\n        onSuccess: async (tokenRes) => {\r\n            let { data } = await Http.post(\"register/google\", tokenRes);\r\n            if (data.status) {\r\n                toast.success(data.msg);\r\n                await dispatch(createUser({\r\n                    user: data.user,\r\n                    token: data.token\r\n                }));\r\n                navigate(\"/subjects\");\r\n            } else {\r\n                toast.error(data.msg);\r\n            }\r\n        },\r\n        onError: errRes => {\r\n            console.log(errRes)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <Container>\r\n                <div className=\"page-content\">\r\n                    <div className=\"page-left-content\">\r\n                        <LazyLoadImage src={SignUpSvg} alt=\"Sign Up\"/>\r\n                    </div>\r\n                    <div className=\"page-right-content\">\r\n                        <div className=\"signup-form\">\r\n                            <h1 className=\"page-title\">Create account</h1>\r\n                            <Formik \r\n                                // validationSchema={validationSchema}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                onSubmit={onRegister}\r\n                                initialValues={user}\r\n                            >\r\n                                {({handleSubmit, handleChange, values, touched, errors}) => (\r\n                                    <Form noValidate onSubmit={handleSubmit} className=\"mt-4\">\r\n                                        <div className=\"d-grid\">\r\n                                            <Button variant=\"primary\" className=\"google-signup-btn\" onClick={googleRegister}>\r\n                                                <LazyLoadImage src={GoogleSvg} alt=\"google\" />\r\n                                                Sign up with Google\r\n                                            </Button>\r\n                                        </div>\r\n                                        <div style={{display: \"flex\", alignItems: 'center', justifyContent: 'center'}}>\r\n                                            <div style={{flex: 1}}><hr/></div>\r\n                                            <div className=\"py-2 px-3 fw-bold text-dark\">OR</div>\r\n                                            <div style={{flex: 1}}><hr/></div>\r\n                                        </div>\r\n                                        <FormInput \r\n                                            required\r\n                                            name=\"firstName\"\r\n                                            className=\"mb-4\" \r\n                                            icon=\"fa fa-user\" \r\n                                            type=\"text\" \r\n                                            placeholder=\"First name\"\r\n                                            onChange={handleChange}\r\n                                            value={values.firstName}\r\n                                            touched={touched}\r\n                                            errors={errors}\r\n                                            /> \r\n                                        <FormInput \r\n                                            required\r\n                                            name=\"lastName\"\r\n                                            className=\"mb-4\" \r\n                                            icon=\"fa fa-user\" \r\n                                            type=\"text\" \r\n                                            placeholder=\"Last name\"\r\n                                            onChange={handleChange}\r\n                                            value={values.lastName}\r\n                                            touched={touched}\r\n                                            errors={errors}/>\r\n                                        <FormInput \r\n                                            required\r\n                                            name=\"email\"\r\n                                            className=\"mb-4\" \r\n                                            icon=\"fa fa-envelope\" \r\n                                            type=\"email\" \r\n                                            placeholder=\"Email\"\r\n                                            onChange={handleChange}\r\n                                            value={values.email}\r\n                                            touched={touched}\r\n                                            errors={errors}\r\n                                            />\r\n                                        <FormInput \r\n                                            required\r\n                                            name=\"password\"\r\n                                            className=\"mb-4\" \r\n                                            icon=\"fa fa-lock\" \r\n                                            type=\"password\" \r\n                                            placeholder=\"Create password\"\r\n                                            onChange={handleChange}\r\n                                            value={values.password}\r\n                                            touched={touched}\r\n                                            errors={errors}\r\n                                            />\r\n                                        <FormInput\r\n                                            required\r\n                                            name=\"confirmPassword\"\r\n                                            className=\"mb-5\"\r\n                                            icon=\"fa fa-check\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Confirm password\"\r\n                                            onChange={handleChange}\r\n                                            value={values.confirmPassword}\r\n                                            touched={touched}\r\n                                            errors={errors}\r\n                                            />\r\n                                        <div className=\"d-grid\">\r\n                                            <Button variant=\"primary\" type=\"submit\">Create account</Button>\r\n                                        </div>\r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;"],"names":["dispatch","useDispatch","navigate","useNavigate","yup","firstName","required","lastName","email","password","min","confirmPassword","test","value","this","parent","useEffect","document","title","onRegister","user","resetForm","Http","data","success","toast","msg","googleRegister","useGoogleLogin","onSuccess","tokenRes","status","createUser","token","onError","errRes","console","log","className","Container","LazyLoadImage","src","SignUpSvg","alt","validateOnChange","validateOnBlur","onSubmit","initialValues","handleSubmit","handleChange","values","touched","errors","Form","noValidate","Button","variant","onClick","GoogleSvg","style","display","alignItems","justifyContent","flex","FormInput","name","icon","type","placeholder","onChange"],"sourceRoot":""}