{"version":3,"file":"static/js/3679.9fe64321.chunk.js","mappings":"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","sources":["pages/admin/CreateSubTopic.jsx","services/Http.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\nimport { Card, Form, Button } from 'react-bootstrap'\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport Http from '../../services/Http'\r\nimport { toast } from 'react-toastify'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Editor } from '@tinymce/tinymce-react'\r\n\r\nconst CreateSubTopic = () => {\r\n  const editorRef = useRef(null)\r\n  const navigate = useNavigate()\r\n  const [years, setYears] = useState([])\r\n  const [subjects, setSubjects] = useState([])\r\n  const [topics, setTopics] = useState([])\r\n  const [subTopic, setSubTopic] = useState({\r\n    year: '',\r\n    subject: '',\r\n    topic: '',\r\n    name: '',\r\n    content: '',\r\n    permission: 2\r\n  })\r\n  const validationSchema = yup.object({\r\n    year: yup.string('Choose a year.').required('Year is required.'),\r\n    subject: yup.string('Choose a subject.').required('Subject is required'),\r\n    topic: yup.string('Choose a topic.').required('Topic is required.'),\r\n    name: yup\r\n      .string('Enter a sub topic name.')\r\n      .test('len', 'Must be less than 64 characters.', function (val) {\r\n        return val.length < 64\r\n      })\r\n      .required('Sub topic name is required.')\r\n  })\r\n  useEffect(() => {}, [])\r\n  useEffect(() => {\r\n    const getYears = async () => {\r\n      let { data } = await Http.get('/admin/years/get-all-populate')\r\n      setYears(data)\r\n      setSubjects(data.length ? data[0].subjects : [])\r\n      setTopics(\r\n        data.length && data[0].subjects.length ? data[0].subjects[0].topics : []\r\n      )\r\n      setSubTopic({\r\n        ...subTopic,\r\n        year: data.length ? data[0]._id : '',\r\n        subject:\r\n          data.length && data[0].subjects.length ? data[0].subjects[0]._id : '',\r\n        topic:\r\n          data.length &&\r\n          data[0].subjects.length &&\r\n          data[0].subjects[0].topics.length\r\n            ? data[0].subjects[0].topics[0]._id\r\n            : ''\r\n      })\r\n    }\r\n    getYears()\r\n  }, [])\r\n\r\n  const onChangeYear = ev => {\r\n    let idx = years.findIndex(year => year._id === ev.target.value)\r\n    setSubjects(years[idx].subjects)\r\n    setTopics(years[idx].subjects.length ? years[idx].subjects[0].topics : [])\r\n    setSubTopic({\r\n      ...subTopic,\r\n      year: ev.target.value,\r\n      subject: years[idx].subjects.length ? years[idx].subjects[0]._id : '',\r\n      topic:\r\n        years[idx].subjects.length && years[idx].subjects[0].topics.length\r\n          ? years[idx].subjects[0].topics[0]._id\r\n          : ''\r\n    })\r\n  }\r\n\r\n  const onChangeSubject = ev => {\r\n    let idx = subjects.findIndex(subject => subject._id === ev.target.value)\r\n    setTopics(subjects[idx].topics)\r\n    setSubTopic({\r\n      ...subTopic,\r\n      subject: ev.target.value,\r\n      topic: subjects[idx].topics.length ? subjects[idx].topics[0]._id : ''\r\n    })\r\n  }\r\n\r\n  const onChangeTopic = ev => {\r\n    setSubTopic({\r\n      ...subTopic,\r\n      topic: ev.target.value\r\n    })\r\n  }\r\n\r\n  const onChangePermission = ev => {\r\n    setSubTopic({\r\n      ...subTopic,\r\n      permission: Number(ev.target.value)\r\n    })\r\n  }\r\n\r\n  const onSave = async (subTopic, { resetForm }) => {\r\n    subTopic.content = editorRef.current.getContent()\r\n    let { data } = await Http.post('admin/sub-topics', subTopic)\r\n    if (data.success) {\r\n      toast.success(data.msg)\r\n      resetForm()\r\n      navigate('/admin/sub-topics')\r\n    } else {\r\n      toast.error(data.msg)\r\n    }\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header\r\n        style={{ background: '#3c4b64' }}\r\n        bsPrefix='card-header py-3'\r\n      >\r\n        <Card.Title bsPrefix='card-title mb-0 text-light' as='h5'>\r\n          New subtopic\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Formik\r\n          validationSchema={validationSchema}\r\n          validateOnChange={false}\r\n          validateOnBlur={false}\r\n          onSubmit={onSave}\r\n          initialValues={subTopic}\r\n          enableReinitialize\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            handleBlur,\r\n            values,\r\n            touched,\r\n            errors\r\n          }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Group className='mb-3'>\r\n                <Form.Label>Year:</Form.Label>\r\n                <Form.Select\r\n                  name='year'\r\n                  value={subTopic.year}\r\n                  onChange={onChangeYear}\r\n                  onBlur={handleBlur}\r\n                  touched={touched}\r\n                  isInvalid={!!errors.year}\r\n                >\r\n                  {years.map((year, idx) => (\r\n                    <option key={idx} value={year._id}>\r\n                      {year.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.year}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className='mb-3'>\r\n                <Form.Label>Subject:</Form.Label>\r\n                <Form.Select\r\n                  name='subject'\r\n                  value={subTopic.subject}\r\n                  onChange={onChangeSubject}\r\n                  onBlur={handleBlur}\r\n                  touched={touched}\r\n                  isInvalid={!!errors.subject}\r\n                >\r\n                  {subjects.map((subject, idx) => (\r\n                    <option key={idx} value={subject._id}>\r\n                      {subject.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.subject}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className='mb-3'>\r\n                <Form.Label>Topic:</Form.Label>\r\n                <Form.Select\r\n                  name='topic'\r\n                  value={subTopic.topic}\r\n                  onChange={onChangeTopic}\r\n                  onBlur={handleBlur}\r\n                  touched={touched}\r\n                  isInvalid={!!errors.topic}\r\n                >\r\n                  {topics.map((topic, idx) => (\r\n                    <option key={idx} value={topic._id}>\r\n                      {topic.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.topic}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className='mb-3'>\r\n                <Form.Label>Name:</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Please enter a sub topic name.'\r\n                  name='name'\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.name}\r\n                  touched={touched}\r\n                  isInvalid={!!errors.name}\r\n                />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.name}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className='mb-3'>\r\n                <Form.Check\r\n                  inline\r\n                  type='radio'\r\n                  name='permission'\r\n                  label='Open'\r\n                  id='permission-1'\r\n                  value='0'\r\n                  checked={values.permission === 0}\r\n                  onChange={onChangePermission}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type='radio'\r\n                  name='permission'\r\n                  label='Free'\r\n                  id='permission-2'\r\n                  value='1'\r\n                  checked={values.permission === 1}\r\n                  onChange={onChangePermission}\r\n                  onBlur={handleBlur}\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  type='radio'\r\n                  name='permission'\r\n                  label='Premium'\r\n                  id='permission-3'\r\n                  value='2'\r\n                  checked={values.permission === 2}\r\n                  onChange={onChangePermission}\r\n                  onBlur={handleBlur}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className='mb-3'>\r\n                <Form.Label>Description:</Form.Label>\r\n                <Editor\r\n                  tinymceScriptSrc={\r\n                    process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'\r\n                  }\r\n                  onInit={(ev, editor) => (editorRef.current = editor)}\r\n                  init={{\r\n                    height: 450,\r\n                    menubar: true,\r\n                    plugins: [\r\n                      'image',\r\n                      'grid',\r\n                      'tiny_mce_wiris',\r\n                      'code',\r\n                      'table',\r\n                      'link',\r\n                      'media',\r\n                      'codesample',\r\n                    ],\r\n                    toolbar:\r\n                      'undo redo | formatselect | ' +\r\n                      'bold italic backcolor | alignleft aligncenter ' +\r\n                      'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                      'removeformat | grid_insert | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry | help',\r\n                    draggable_modal: true,\r\n                    init_instance_callback: function(editor) {\r\n                        editor.contentWindow.addEventListener(\"copy\", function(ev) {\r\n                            ev.preventDefault()\r\n                        });\r\n                        editor.contentWindow.addEventListener(\"paste\", function(ev) {\r\n                            ev.preventDefault();\r\n                        });\r\n                        editor.contentWindow.addEventListener(\"keydown\", function(ev) {\r\n                            if((ev.ctrlKey || ev.metaKey) && (ev.key === \"p\" || ev.charCode === 16 || ev.charCode === 112 || ev.keyCode === 80) ){\r\n                                ev.cancelBubble = true;\r\n                                ev.preventDefault();\r\n                                ev.stopImmediatePropagation();\r\n                            }  \r\n                        })\r\n                        \r\n                    },\r\n                    content_style:\r\n                      'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n                  }}\r\n                  name='description'\r\n                />\r\n              </Form.Group>\r\n              <Button type='submit' variant='primary' className='float-end'>\r\n                <i className='fa fa-save'></i> Save\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\nexport default CreateSubTopic\r\n","import axios from \"axios\";\r\nconst getToken = () => {\r\n    return window.localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\r\n}\r\n\r\nconst http = axios.create({\r\n    // baseURL: \"http://localhost:5000/api/v1/\",\r\n    baseURL: \"/api/v1/\",\r\n    timeout: 15000,\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    }\r\n});\r\n\r\nhttp.interceptors.request.use(function(config) {\r\n    config.headers.Authorization = `Bearer ${getToken()}`;\r\n    return config;\r\n});\r\nhttp.interceptors.response.use(function(response) {\r\n    return response;\r\n}, function(err) {\r\n    if (err.response.status === 401 || err.response.status === 403 || err.response.status === 406) {\r\n        window.localStorage.clear();\r\n        window.location.href = \"/login\";\r\n    } \r\n    return Promise.reject(err);\r\n});\r\n\r\nexport default http;"],"names":["editorRef","useRef","navigate","useNavigate","useState","years","setYears","subjects","setSubjects","topics","setTopics","year","subject","topic","name","content","permission","subTopic","setSubTopic","validationSchema","yup","required","test","val","length","useEffect","getYears","Http","data","_id","onChangeYear","ev","idx","findIndex","target","value","onChangeSubject","onChangeTopic","onChangePermission","Number","onSave","resetForm","current","getContent","success","toast","msg","style","background","bsPrefix","as","validateOnChange","validateOnBlur","onSubmit","initialValues","enableReinitialize","handleSubmit","handleChange","handleBlur","values","touched","errors","noValidate","className","onChange","onBlur","isInvalid","map","type","placeholder","inline","label","id","checked","tinymceScriptSrc","onInit","editor","init","height","menubar","plugins","toolbar","draggable_modal","init_instance_callback","contentWindow","addEventListener","preventDefault","ctrlKey","metaKey","key","charCode","keyCode","cancelBubble","stopImmediatePropagation","content_style","variant","getToken","window","localStorage","getItem","http","axios","baseURL","timeout","headers","Authorization","interceptors","request","use","config","response","err","status","clear","location","href","Promise","reject"],"sourceRoot":""}