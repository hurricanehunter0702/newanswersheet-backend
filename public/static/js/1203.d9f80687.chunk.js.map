{"version":3,"file":"static/js/1203.d9f80687.chunk.js","mappings":"+RAyEA,EAhEuB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAyBE,EAAAA,EAAAA,mBAAjBC,GAAkC,YAAtB,GACpB,GAA4BC,EAAAA,EAAAA,YAAU,eAA9BC,EAAK,KAAEC,EAAQ,KACvB,GAAoCF,EAAAA,EAAAA,YAAU,eAAtCG,EAAS,KAAEC,EAAY,KACzBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACNC,SAASC,MAAQ,8BACjB,IAAMC,EAAqB,yCAAG,mFAC1BL,GAASM,EAAAA,EAAAA,KAAW,IACpBC,YAAU,uBAAC,iGAUN,OAPGC,EAAYhB,EAAaiB,IAAI,cACjB,WAAZpB,GACAqB,EAAYlB,EAAaiB,IAAI,aAC7BE,EAAUnB,EAAaiB,IAAI,YACR,WAAZpB,IACPqB,EAAYlB,EAAaiB,IAAI,cAC7BE,EAAU,GACb,SACoBC,EAAAA,EAAAA,IAAS,WAAD,OAAYvB,EAAO,6BAAqBqB,EAAS,oBAAYC,EAAO,sBAAcH,IAAY,OAAjH,GAAiH,WAArHK,EAAI,EAAJA,MACGC,QAAQ,CAAD,gBACZnB,EAASkB,EAAKnB,OACdG,EAAagB,EAAKjB,WAClBI,GAASM,EAAAA,EAAAA,KAAW,IACpBS,EAAAA,GAAAA,QAAcF,EAAKG,KAAK,4BAEpBH,EAAKI,MAAM,CAAD,iCACJZ,IAAwB,KAAD,2BAE7BL,GAASM,EAAAA,EAAAA,KAAW,IACpBS,EAAAA,GAAAA,MAAYF,EAAKG,KAAK,4CAG/B,MAAM,2CACZ,kBA5B0B,mCA6B3BX,GACJ,GAAG,IAEH,IAAMa,EAAc,yCAAG,2GACEN,EAAAA,EAAAA,KAAU,kBAAmB,CAC9ClB,MAAOA,EACPE,UAAWA,IACZ,KAAD,YAHIiB,EAAI,EAAJA,MAIGC,SACLC,EAAAA,GAAAA,QAAcF,EAAKG,KACnBlB,EAAS,YAETiB,EAAAA,GAAAA,MAAYF,EAAKG,KACjBlB,EAAS,WACZ,2CACJ,kBAZmB,mCAcpB,OACI,iBAAKqB,UAAU,4BAA2B,WACtC,UAACC,EAAA,EAAM,CAACC,QAAQ,UAAUF,UAAU,OAAOG,QAASJ,EAAe,WAAC,cAAGC,UAAU,mBAAqB,uBACtG,UAACC,EAAA,EAAM,CAACC,QAAQ,SAASC,QAAS,kBAAMxB,EAAS,SAAS,EAAC,WAAC,cAAGqB,UAAU,eAAiB,sBAGtG,C,uCCtEMI,EAAW,WACb,OAAOC,OAAOC,aAAaC,QAAQ,SAAWD,aAAaC,QAAQ,SAAW,IAClF,EAEMC,EAAOC,EAAAA,GAAAA,OAAa,CAEtBC,QAAS,WACTC,QAAS,KACTC,QAAS,CACLC,cAAc,UAAD,OAAYT,QAIjCI,EAAKM,aAAaC,QAAQC,KAAI,SAASC,GAEnC,OADAA,EAAOL,QAAQC,cAAa,iBAAaT,KAClCa,CACX,IACAT,EAAKM,aAAaI,SAASF,KAAI,SAASE,GACpC,OAAOA,CACX,IAAG,SAASC,GAKR,OAJ4B,MAAxBA,EAAID,SAASE,QAA0C,MAAxBD,EAAID,SAASE,QAA0C,MAAxBD,EAAID,SAASE,SAC3Ef,OAAOC,aAAae,QACpBhB,OAAOiB,SAASC,KAAO,UAEpBC,QAAQC,OAAON,EAC1B,IAEA,K","sources":["pages/users/BillingSuccess.jsx","services/Http.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLoading } from \"../../store/reducers/userReducer\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport Http from \"../../services/Http\";\r\nimport \"./BillingSuccess.css\";\r\n\r\nconst BillingSuccess = () => {\r\n    const { gateway } = useParams();\r\n    const [ searchParams ] = useSearchParams();\r\n    const [ email, setEmail ] = useState();\r\n    const [ invoiceId, setInvoiceId ] = useState();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        document.title = \"AnswerSheet - HSC made easy\"\r\n        const setBillingTransaction = async () => {\r\n            dispatch(setLoading(true));\r\n            setTimeout(async () => {\r\n                let paymentId;\r\n                let payerId\r\n                let historyId = searchParams.get('history_id');\r\n                if (gateway === \"paypal\") {\r\n                    paymentId = searchParams.get(\"paymentId\");\r\n                    payerId = searchParams.get(\"PayerID\");\r\n                } else if (gateway === \"stripe\") {\r\n                    paymentId = searchParams.get(\"session_id\");\r\n                    payerId = 0;\r\n                }\r\n                let { data } = await Http.get(`billing/${gateway}/return?paymentId=${paymentId}&payerId=${payerId}&historyId=${historyId}`)\r\n                if (data.success) {\r\n                    setEmail(data.email);\r\n                    setInvoiceId(data.invoiceId);\r\n                    dispatch(setLoading(false));\r\n                    toast.success(data.msg);\r\n                } else {\r\n                    if (data.retry) {\r\n                        await setBillingTransaction();\r\n                    } else {\r\n                        dispatch(setLoading(false));\r\n                        toast.error(data.msg);\r\n                    }\r\n                }\r\n            }, 2500);\r\n        }\r\n        setBillingTransaction();\r\n    }, []);\r\n    \r\n    const receiveInvoice = async () => {\r\n        let { data } = await Http.post(\"billing/invoice\", {\r\n            email: email,\r\n            invoiceId: invoiceId\r\n        });\r\n        if (data.success) {\r\n            toast.success(data.msg);\r\n            navigate(\"/login\");\r\n        } else {\r\n            toast.error(data.msg);\r\n            navigate(\"/login\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"billing-success-container\">\r\n            <Button variant=\"primary\" className=\"me-3\" onClick={receiveInvoice}><i className=\"fa fa-envelope\"></i> Receive invoice</Button>\r\n            <Button variant=\"danger\" onClick={() => navigate(\"/login\")}><i className=\"fa fa-undo\"></i> Back to login</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillingSuccess","import axios from \"axios\";\r\nconst getToken = () => {\r\n    return window.localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\r\n}\r\n\r\nconst http = axios.create({\r\n    // baseURL: \"http://localhost:5000/api/v1/\",\r\n    baseURL: \"/api/v1/\",\r\n    timeout: 15000,\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    }\r\n});\r\n\r\nhttp.interceptors.request.use(function(config) {\r\n    config.headers.Authorization = `Bearer ${getToken()}`;\r\n    return config;\r\n});\r\nhttp.interceptors.response.use(function(response) {\r\n    return response;\r\n}, function(err) {\r\n    if (err.response.status === 401 || err.response.status === 403 || err.response.status === 406) {\r\n        window.localStorage.clear();\r\n        window.location.href = \"/login\";\r\n    } \r\n    return Promise.reject(err);\r\n});\r\n\r\nexport default http;"],"names":["gateway","useParams","useSearchParams","searchParams","useState","email","setEmail","invoiceId","setInvoiceId","navigate","useNavigate","dispatch","useDispatch","useEffect","document","title","setBillingTransaction","setLoading","setTimeout","historyId","get","paymentId","payerId","Http","data","success","toast","msg","retry","receiveInvoice","className","Button","variant","onClick","getToken","window","localStorage","getItem","http","axios","baseURL","timeout","headers","Authorization","interceptors","request","use","config","response","err","status","clear","location","href","Promise","reject"],"sourceRoot":""}