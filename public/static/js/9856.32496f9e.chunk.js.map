{"version":3,"file":"static/js/9856.32496f9e.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.js","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  disabled,\n  className,\n  style,\n  activeLabel,\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, { ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\n\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart: TypedChartComponent = forwardRef(\n  ChartComponent\n) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["PageItem","React","ref","active","disabled","className","style","activeLabel","children","props","Component","Anchor","_jsx","classNames","_jsxs","defaultProps","displayName","createButton","name","defaultValue","label","Button","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Object","assign","Item","Row","as","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","Table","striped","bordered","borderless","hover","variant","responsive","table","responsiveClass","noop","uid","id","isNullOrUndef","value","isArray","Array","type","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","current","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_getKeyResolver","parts","split","tmp","_splitKey","obj","resolveObjectKey","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","n","isNaN","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","this","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","colorLib","getHoverColor","saturate","darken","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","chart","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","constructor","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","_date","init","formats","diff","startOf","endOf","members","DateAdapterBase","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","cursor","defaultColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","positioners","WeakMap","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","updateMode","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","role","forwardRef","createTypedChart","registerables","Line"],"sourceRoot":""}