{"version":3,"file":"static/js/4345.58a987df.chunk.js","mappings":"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","sources":["pages/users/Profile.jsx","services/Http.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport {\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  Button\r\n} from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createUser } from '../../store/reducers/userReducer'\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { toast } from 'react-toastify'\r\nimport Http from '../../services/Http'\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch()\r\n  const userState = useSelector(state => state.user.user)\r\n  const token = useSelector(state => state.user.token)\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: ''\r\n  })\r\n  const [passwords, setPasswords] = useState({\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n\r\n  const validationProfileSchema = yup.object({\r\n    firstName: yup.string().required('First name is required.'),\r\n    lastName: yup.string().required('Last name is required.'),\r\n    email: yup\r\n      .string()\r\n      .email('Enter a vaild email.')\r\n      .required('Email is required.')\r\n  })\r\n\r\n  const validationPasswordsSchema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .min(8, 'Password should be minimum 8 characters in length.')\r\n      .required('Password is required.'),\r\n    confirmPassword: yup\r\n      .string()\r\n      .test(\r\n        'password-match',\r\n        'Password and Confirm password do not match.',\r\n        function (value) {\r\n          return this.parent.password === value\r\n        }\r\n      )\r\n  })\r\n\r\n  useEffect(() => {\r\n    document.title = 'AnswerSheet - Profile'\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setUser(userState)\r\n  }, [userState])\r\n\r\n  const updateProfile = async (user, { resetForm }) => {\r\n    let id = user._id\r\n    let { data } = await Http.put(`users/${id}`, user)\r\n    if (data.status) {\r\n      toast.success(data.msg)\r\n      dispatch(\r\n        createUser({\r\n          user: data.data,\r\n          token: token\r\n        })\r\n      )\r\n    } else {\r\n      toast.error(data.msg)\r\n    }\r\n  }\r\n\r\n  const updatePassword = async (passwords, { resetForm }) => {\r\n    let { data } = await Http.patch(`users/${user._id}`, {\r\n      password: passwords.password\r\n    });\r\n    if (data.status) {\r\n      resetForm();\r\n      toast.success(data.msg);\r\n    } else {\r\n      toast.error(data.msg);\r\n    }\r\n  }\r\n  return (\r\n    <Container className='py-3'>\r\n      <Card>\r\n        <Card.Header\r\n          style={{ background: '#3c4b64' }}\r\n          bsPrefix='card-header py-3'\r\n        >\r\n          <Card.Title as='h5' bsPrefix='card-title mb-0 text-light'>\r\n            Profile\r\n          </Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h4 className='mb-3'>Update profile</h4>\r\n              <Formik\r\n                enableReinitialize={true}\r\n                validationSchema={validationProfileSchema}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                onSubmit={updateProfile}\r\n                initialValues={user}\r\n              >\r\n                {({ handleSubmit, handleChange, values, touched, errors }) => (\r\n                  <Form noValidate onSubmit={handleSubmit}>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <Form.Group className='mb-3'>\r\n                          <Form.Label>First name:</Form.Label>\r\n                          <InputGroup>\r\n                            <InputGroup.Text>\r\n                              <i className='fa fa-user'></i>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                              type='text'\r\n                              name='firstName'\r\n                              value={values.firstName}\r\n                              onChange={handleChange}\r\n                              isInvalid={!!errors.firstName}\r\n                              touched={touched}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                              {errors.firstName}\r\n                            </Form.Control.Feedback>\r\n                          </InputGroup>\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <Form.Group className='mb-3'>\r\n                          <Form.Label>Last name:</Form.Label>\r\n                          <InputGroup>\r\n                            <InputGroup.Text>\r\n                              <i className='fa fa-user'></i>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                              type='text'\r\n                              name='lastName'\r\n                              value={values.lastName}\r\n                              onChange={handleChange}\r\n                              isInvalid={!!errors.lastName}\r\n                              touched={touched}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                              {errors.lastName}\r\n                            </Form.Control.Feedback>\r\n                          </InputGroup>\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <Form.Group className='mb-3'>\r\n                          <Form.Label>Email:</Form.Label>\r\n                          <InputGroup>\r\n                            <InputGroup.Text>\r\n                              <i className='fa fa-envelope'></i>\r\n                            </InputGroup.Text>\r\n                            <Form.Control\r\n                              type='email'\r\n                              name='email'\r\n                              value={values.email}\r\n                              onChange={handleChange}\r\n                              isInvalid={!!errors.email}\r\n                              touched={touched}\r\n                            />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                              {errors.email}\r\n                            </Form.Control.Feedback>\r\n                          </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Button\r\n                            type='submit'\r\n                            variant='primary'\r\n                            className='float-end'\r\n                          >\r\n                            <i className='fa fa-save'></i> Update\r\n                          </Button>\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </Col>\r\n            <Col md={6}>\r\n              <h4 className='mb-3'>Change password</h4>\r\n              <Formik\r\n                enableReinitialize={true}\r\n                validationSchema={validationPasswordsSchema}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                onSubmit={updatePassword}\r\n                initialValues={passwords}\r\n              >\r\n                {({ handleSubmit, handleChange, values, touched, errors }) => (\r\n                  <Form noValidate onSubmit={handleSubmit}>\r\n                    <Form.Group className='mb-3'>\r\n                      <Form.Label>New password:</Form.Label>\r\n                      <Form.Control\r\n                        type='password'\r\n                        name='password'\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        isInvalid={!!errors.password}\r\n                        touched={touched}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className='mb-3'>\r\n                      <Form.Label>Confirm password:</Form.Label>\r\n                      <Form.Control\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={values.confirmPassword}\r\n                        onChange={handleChange}\r\n                        isInvalid={!!errors.confirmPassword}\r\n                        touched={touched}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">{errors.confirmPassword}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Button\r\n                      type='submit'\r\n                      variant='primary'\r\n                      style={{ float: 'right' }}\r\n                    >\r\n                      <i className='fa fa-edit'></i> Change password\r\n                    </Button>\r\n                  </Form>\r\n                )}\r\n                </Formik>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import axios from \"axios\";\r\nconst getToken = () => {\r\n    return window.localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\r\n}\r\n\r\nconst http = axios.create({\r\n    // baseURL: \"http://localhost:5000/api/v1/\",\r\n    baseURL: \"/api/v1/\",\r\n    timeout: 15000,\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    }\r\n});\r\n\r\nhttp.interceptors.request.use(function(config) {\r\n    config.headers.Authorization = `Bearer ${getToken()}`;\r\n    return config;\r\n});\r\nhttp.interceptors.response.use(function(response) {\r\n    return response;\r\n}, function(err) {\r\n    if (err.response.status === 401 || err.response.status === 403 || err.response.status === 406) {\r\n        window.localStorage.clear();\r\n        window.location.href = \"/login\";\r\n    } \r\n    return Promise.reject(err);\r\n});\r\n\r\nexport default http;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["dispatch","useDispatch","userState","useSelector","state","user","token","useState","firstName","lastName","email","setUser","password","confirmPassword","passwords","validationProfileSchema","yup","required","validationPasswordsSchema","min","test","value","this","parent","useEffect","document","title","updateProfile","resetForm","id","_id","Http","data","status","toast","msg","createUser","updatePassword","className","style","background","bsPrefix","as","md","enableReinitialize","validationSchema","validateOnChange","validateOnBlur","onSubmit","initialValues","handleSubmit","handleChange","values","touched","errors","noValidate","type","name","onChange","isInvalid","variant","float","getToken","window","localStorage","getItem","http","axios","baseURL","timeout","headers","Authorization","interceptors","request","use","config","response","err","clear","location","href","Promise","reject","CardImg","React","ref","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","InputGroupText","InputGroup","size","hasValidation","InputGroupContext","Radio","FormCheckInput","Checkbox","Row","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push"],"sourceRoot":""}